<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
        https://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

<!--    para que funcione spring mvc, hay que definir una bean por cada controlador a usar-->

<!--    <bean id="controlador1" class="controllers.LibrosController">-->

<!--    </bean>-->
<!--    <bean id="controlador2" class="controllers.AdminController">-->

<!--    </bean>-->

<!--    Vamos a acitvar el uso de anotaciones para beans-->
    <context:annotation-config/>
<!--    Vamos a decirle a spring que nos cree una bean por cada clase-->
<!--    que tenga una marca de spring: @Controller, @Service, @Repository... -->

<!--    el paque a escanear es controllers-->
    <context:component-scan base-package="controllers"/>
    <context:component-scan base-package="RESTcontrollers"/>

<!--    Configurar spring jdbc para ayudarme a registrar en base de datos-->

<!--    la siguiente bean define los parametros de conexion a la base de datos-->
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/tienda_libros?createDatabaseIfNotExists=true"/>
        <property name="username" value="root"/>
        <property name="password" value=""/>
    </bean>

<!--    vamos a configurar hibernate-->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="modelo" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">
                    org.hibernate.dialect.MySQL5InnoDBDialect
                </prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" />
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>


<!--    Vamos a crear una bean de LibrosDAOImpl y darle el dataSource-->
    <bean id="librosDAO" class="daosImpl.LibrosDAOImpl">
        <property name="dataSource" ref="dataSource"/>
    </bean>

<!--    Vamos a crear una bean de SercicioUsuarioImpl que pueda pedir por-->
<!--    @Autowired en un controlador-->

    <bean class="serviciosImpl.ServicioUsuariosImpl" />

<!--    Vamos a mejorar el tema de las vistas-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsps/" />
        <property name="suffix" value=".jsp" />
    </bean>

<!--    bean que nos va a ayudar con la subida de archivos-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

<!--    En spring mvc todas las peticiones deben pasar por un controlador-->
<!--    para permitir que javascript css y otros recursos externos puedan-->
<!--    ser importados directamente, hay que poner lo siguiente:-->
    <mvc:annotation-driven/>
    <mvc:resources mapping="/js/**" location="/js/"/>
    <mvc:resources mapping="/plantillas_mustache/**" location="/plantillas_mustache/"/>
    <mvc:resources location="/subidas/" mapping="/subidas/**"/>


</beans>